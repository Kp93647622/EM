import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert, Dimensions, StatusBar } from 'react-native';
import { Audio } from 'expo-av';
import * as Speech from 'expo-speech';
import { useNavigation } from '@react-navigation/native';
import { LinearGradient } from 'expo-linear-gradient';
import { Button } from 'react-native';

const { width } = Dimensions.get('window');

export default function AdventureLesson() {
  const navigation = useNavigation();
  const [sound, setSound] = useState();
  const [currentScore, setCurrentScore] = useState(0);
  const [totalQuestions] = useState(6);
  const [answeredQuestions, setAnsweredQuestions] = useState(new Set());
  const [isPlaying, setIsPlaying] = useState(false);

  // Utility: split array to rows of 2
  const chunkArray = (arr, chunkSize) => {
    const result = [];
    for (let i = 0; i < arr.length; i += chunkSize) {
      result.push(arr.slice(i, i + chunkSize));
    }
    return result;
  };

  useEffect(() => {
    configureAudioMode();
    return () => {
      if (sound) sound.unloadAsync();
      Speech.stop();
    };
  }, [sound]);

  const configureAudioMode = async () => {
    try {
      await Audio.setAudioModeAsync({
        allowsRecordingIOS: false,
        interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,
        playsInSilentModeIOS: true,
        staysActiveInBackground: false,
        interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,
        shouldDuckAndroid: true,
        playThroughEarpieceAndroid: false,
      });
    } catch (error) {
      console.log('Error configuring audio mode:', error);
    }
  };

  const playSound = async (text, rate = 0.8) => {
    try {
      if (isPlaying) return;
      setIsPlaying(true);
      await Speech.stop();

      const speechOptions = {
        language: 'en-US',
        pitch: 1.0,
        rate,
        voice: null,
        onDone: () => setIsPlaying(false),
        onStopped: () => setIsPlaying(false),
        onError: () => setIsPlaying(false),
      };

      await Speech.speak(text, speechOptions);
    } catch (error) {
      setIsPlaying(false);
    }
  };

  const stopAudio = async () => {
    try {
      if (sound) {
        await sound.stopAsync();
        await sound.unloadAsync();
        setSound(null);
      }
      await Speech.stop();
      setIsPlaying(false);
    } catch {
      setIsPlaying(false);
    }
  };

  const handleQuizSubmit = (questionId, answer, correctAnswer) => {
    if (answeredQuestions.has(questionId)) {
      Alert.alert('‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô', '‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß');
      return;
    }
    const newAnsweredQuestions = new Set(answeredQuestions);
    newAnsweredQuestions.add(questionId);
    setAnsweredQuestions(newAnsweredQuestions);

    if (answer === correctAnswer) {
      setCurrentScore(currentScore + 1);
      Alert.alert('üéâ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!', '‡∏î‡∏µ‡∏°‡∏≤‡∏Å! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', [
        { text: '‡∏ï‡πà‡∏≠‡πÑ‡∏õ', onPress: () => playSound('Excellent! Well done!') }
      ]);
    } else {
      Alert.alert('‚ùå ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', '‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏≠: ' + correctAnswer, [
        { text: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡πâ‡∏ß', onPress: () => playSound('Try again! You can do it!') }
      ]);
    }
  };

  const grammarRules = [
    {
      title: "Past Perfect Tense",
      rule: "Subject + had + past participle",
      examples: [
        "By the time the explorer arrived, the team had already left.",
        "She had dreamed of this adventure for years.",
        "They had prepared for months before the expedition."
      ],
      explanation: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï",
      icon: "‚è∞"
    },
    {
      title: "Past Perfect Continuous",
      rule: "Subject + had been + verb-ing",
      examples: [
        "He had been training for the marathon for six months.",
        "The scientists had been studying the area since 2010.",
        "She had been following her role model's journey for years."
      ],
      explanation: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï",
      icon: "üîÑ"
    },
    {
      title: "Adverb Sentence Starters",
      rule: "Adverb/Adverbial phrase, + main clause",
      examples: [
        "Surprisingly, the mountain was easier to climb than expected.",
        "Unfortunately, the weather turned bad during their journey.",
        "Fortunately, they had brought enough supplies for the trip."
      ],
      explanation: "‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏Å‡∏£‡∏¥‡∏¢‡∏≤‡∏ß‡∏¥‡πÄ‡∏®‡∏©‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏•‡∏µ‡∏Å‡∏£‡∏¥‡∏¢‡∏≤‡∏ß‡∏¥‡πÄ‡∏®‡∏©‡∏ì‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô",
      icon: "‚ö°"
    }
  ];

  const adventureVocabulary = [
    {
      category: "Role Models (‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á)",
      icon: "üë•",
      items: [
        { word: "explorer", meaning: "‡∏ô‡∏±‡∏Å‡∏™‡∏≥‡∏£‡∏ß‡∏à", pronunciation: "/…™kÀàspl…îÀêr…ôr/", example: "The explorer had discovered many new lands." },
        { word: "mountaineer", meaning: "‡∏ô‡∏±‡∏Å‡∏õ‡∏µ‡∏ô‡πÄ‡∏Ç‡∏≤", pronunciation: "/Àåma änt…™Ààn…™…ôr/", example: "The mountaineer had been climbing since childhood." },
        { word: "adventurer", meaning: "‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢", pronunciation: "/…ôdÀàvent É…ôr…ôr/", example: "She had always admired famous adventurers." },
        { word: "pioneer", meaning: "‡∏ú‡∏π‡πâ‡∏ö‡∏∏‡∏Å‡πÄ‡∏ö‡∏¥‡∏Å", pronunciation: "/Àåpa…™…ôÀàn…™…ôr/", example: "The pioneer had opened new trading routes." },
        { word: "scientist", meaning: "‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", pronunciation: "/Ààsa…™…ônt…™st/", example: "The scientist had been researching for decades." },
        { word: "innovator", meaning: "‡∏ô‡∏±‡∏Å‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πâ‡∏ô", pronunciation: "/Àà…™n…ôve…™t…ôr/", example: "The innovator had revolutionized travel equipment." }
      ]
    },
    {
      category: "Adventure Activities (‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢)",
      icon: "üéØ",
      items: [
        { word: "expedition", meaning: "‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à", pronunciation: "/Àåeksp…™Ààd…™ É…ôn/", example: "The expedition had taken three months to complete." },
        { word: "journey", meaning: "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á", pronunciation: "/Ààd í…úÀêrni/", example: "Their journey had been full of unexpected discoveries." },
        { word: "trek", meaning: "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏õ‡πà‡∏≤", pronunciation: "/trek/", example: "They had been trekking through the jungle for weeks." },
        { word: "voyage", meaning: "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏ô‡πâ‡∏≥", pronunciation: "/Ààv…î…™…™d í/", example: "The voyage had taken them across three oceans." },
        { word: "quest", meaning: "‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏ß‡∏á‡∏´‡∏≤", pronunciation: "/kwest/", example: "His quest for knowledge had led him to remote places." },
        { word: "mission", meaning: "‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à", pronunciation: "/Ààm…™ É…ôn/", example: "The rescue mission had been successfully completed." }
      ]
    },
    {
      category: "Exploration Equipment (‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏£‡∏ß‡∏à)",
      icon: "üß≠",
      items: [
        { word: "compass", meaning: "‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏¥‡∏®", pronunciation: "/Ààk åmp…ôs/", example: "He had always carried a compass on his adventures." },
        { word: "map", meaning: "‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà", pronunciation: "/m√¶p/", example: "The ancient map had guided them to the treasure." },
        { word: "backpack", meaning: "‡πÄ‡∏õ‡πâ‡∏™‡∏∞‡∏û‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á", pronunciation: "/Ààb√¶kp√¶k/", example: "Her backpack had been packed with essential supplies." },
        { word: "tent", meaning: "‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå", pronunciation: "/tent/", example: "They had set up their tent before the storm arrived." },
        { word: "rope", meaning: "‡πÄ‡∏ä‡∏∑‡∏≠‡∏Å", pronunciation: "/ro äp/", example: "The climbing rope had saved their lives." },
        { word: "flashlight", meaning: "‡πÑ‡∏ü‡∏â‡∏≤‡∏¢", pronunciation: "/Ààfl√¶ Éla…™t/", example: "The flashlight had been their only source of light." }
      ]
    }
  ];

  const inspirationalStories = [
    {
      title: "Marie Curie - The Scientific Pioneer",
      story: "Remarkably, Marie Curie had overcome numerous obstacles to become the first woman to win a Nobel Prize. Unfortunately, she had faced discrimination throughout her career. However, she had been working tirelessly in her laboratory, discovering radium and polonium. Before her groundbreaking discoveries, scientists had not understood radioactivity. Amazingly, she had won two Nobel Prizes in different fields - physics and chemistry.",
      thai: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏ó‡∏∂‡πà‡∏á ‡∏°‡∏≤‡∏£‡∏µ ‡∏Ñ‡∏π‡∏£‡∏µ ‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÇ‡∏ô‡πÄ‡∏ö‡∏• ‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏•‡∏≠‡∏î‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô ‡πÅ‡∏ï‡πà‡πÄ‡∏ò‡∏≠‡∏Å‡πá‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠ ‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡πÄ‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏°‡πÅ‡∏•‡∏∞‡πÇ‡∏û‡πÇ‡∏•‡πÄ‡∏ô‡∏µ‡∏¢‡∏° ‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠ ‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏°‡∏°‡∏±‡∏ô‡∏ï‡∏†‡∏≤‡∏û‡∏£‡∏±‡∏á‡∏™‡∏µ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏≠‡∏±‡∏®‡∏à‡∏£‡∏£‡∏¢‡πå ‡πÄ‡∏ò‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÇ‡∏ô‡πÄ‡∏ö‡∏•‡∏™‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÉ‡∏ô‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô - ‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏°‡∏µ",
      icon: "üß™"
    },
    {
      title: "Ernest Shackleton - The Antarctic Explorer",
      story: "Incredibly, Ernest Shackleton had been preparing for his Antarctic expedition for over two years. Unfortunately, his ship Endurance had become trapped in ice. Fortunately, he had been training his crew for such emergencies. Before the rescue, they had been surviving on the ice for nearly two years. Heroically, Shackleton had led his entire crew to safety without losing a single man.",
      thai: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠ ‡πÄ‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏ô‡∏™‡∏ï‡πå ‡πÅ‡∏ä‡∏Ñ‡πÄ‡∏Ñ‡∏¥‡∏•‡∏ï‡∏±‡∏ô ‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÅ‡∏≠‡∏ô‡∏ï‡∏≤‡∏£‡πå‡∏Å‡∏ï‡∏¥‡∏Å‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡∏™‡∏≠‡∏á‡∏õ‡∏µ ‡πÅ‡∏ï‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏∑‡∏≠ Endurance ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‡∏ï‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏≤‡πÑ‡∏î‡πâ‡∏ù‡∏∂‡∏Å‡∏•‡∏π‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏ï‡∏∏‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏µ‡πâ ‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏û‡∏ß‡∏Å‡πÄ‡∏Ç‡∏≤‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏≠‡∏î‡∏ö‡∏ô‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏∑‡∏≠‡∏ö‡∏™‡∏≠‡∏á‡∏õ‡∏µ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç ‡πÅ‡∏ä‡∏Ñ‡πÄ‡∏Ñ‡∏¥‡∏•‡∏ï‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ô‡∏≥‡∏•‡∏π‡∏Å‡πÄ‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏ô‡πÉ‡∏î‡πÄ‡∏•‡∏¢",
      icon: "üßä"
    }
  ];

  const adverbStarters = [
    { word: "Surprisingly", meaning: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏î‡πÉ‡∏à", example: "Surprisingly, the cave was deeper than expected.", icon: "üò≤" },
    { word: "Unfortunately", meaning: "‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢", example: "Unfortunately, the storm delayed their journey.", icon: "üòî" },
    { word: "Fortunately", meaning: "‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ", example: "Fortunately, they had brought extra supplies.", icon: "üçÄ" },
    { word: "Amazingly", meaning: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏ó‡∏∂‡πà‡∏á", example: "Amazingly, she completed the trek in record time.", icon: "ü§©" },
    { word: "Incredibly", meaning: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠", example: "Incredibly, he had never been afraid of heights.", icon: "üò±" },
    { word: "Remarkably", meaning: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï", example: "Remarkably, the ancient map was still accurate.", icon: "ü§î" }
  ];

  const commonPhrases = [
    {
      english: "Surprisingly, the journey was more challenging than expected.",
      thai: "‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏î‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÑ‡∏ß‡πâ",
      usage: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏î‡πÉ‡∏à",
      icon: "üòÆ"
    },
    {
      english: "By the time we reached the summit, we had been climbing for 12 hours.",
      thai: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏Ç‡∏≤ ‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏õ‡∏µ‡∏ô‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 12 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏•‡πâ‡∏ß",
      usage: "‡πÉ‡∏ä‡πâ Past Perfect Continuous ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
      icon: "‚è±Ô∏è"
    },
    {
      english: "Unfortunately, the weather had turned bad before we could continue.",
      thai: "‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏¢‡πà‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ",
      usage: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤",
      icon: "‚õàÔ∏è"
    },
    {
      english: "Fortunately, she had prepared for this situation.",
      thai: "‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ",
      usage: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ",
      icon: "üçÄ"
    },
    {
      english: "The explorer had been studying the map for hours.",
      thai: "‡∏ô‡∏±‡∏Å‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÑ‡∏î‡πâ‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á",
      usage: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï",
      icon: "üó∫Ô∏è"
    },
    {
      english: "Before the expedition, they had gathered all necessary equipment.",
      thai: "‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à ‡∏û‡∏ß‡∏Å‡πÄ‡∏Ç‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
      usage: "‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤",
      icon: "üéí"
    }
  ];

  const quizQuestions = [
    {
      id: 1,
      question: "_____, the mountain climber reached the summit safely.",
      choices: ["A. Fortunately", "B. Fortunate", "C. Fortune", "D. Unfortunate"],
      correct: "A",
      explanation: "‡πÉ‡∏ä‡πâ 'Fortunately' ‡πÄ‡∏õ‡πá‡∏ô adverb ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ"
    },
    {
      id: 2,
      question: "By the time we arrived, the expedition team _____ already left.",
      choices: ["A. has", "B. have", "C. had", "D. having"],
      correct: "C",
      explanation: "‡πÉ‡∏ä‡πâ 'had' ‡πÉ‡∏ô Past Perfect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï"
    },
    {
      id: 3,
      question: "She _____ been training for the marathon for six months.",
      choices: ["A. has", "B. have", "C. had", "D. having"],
      correct: "C",
      explanation: "‡πÉ‡∏ä‡πâ 'had been' ‡πÉ‡∏ô Past Perfect Continuous ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï"
    },
    {
      id: 4,
      question: "_____, the weather turned bad during their journey.",
      choices: ["A. Unlucky", "B. Unfortunately", "C. Unfortunate", "D. Luck"],
      correct: "B",
      explanation: "‡πÉ‡∏ä‡πâ 'Unfortunately' ‡πÄ‡∏õ‡πá‡∏ô adverb ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ä‡∏Ñ‡∏£‡πâ‡∏≤‡∏¢"
    },
    {
      id: 5,
      question: "The explorer _____ many countries before settling down.",
      choices: ["A. visit", "B. visited", "C. has visited", "D. had visited"],
      correct: "D",
      explanation: "‡πÉ‡∏ä‡πâ 'had visited' ‡πÉ‡∏ô Past Perfect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏ê‡∏≤‡∏ô"
    },
    {
      id: 6,
      question: "_____, they found the lost city after months of searching.",
      choices: ["A. Amazing", "B. Amazingly", "C. Amazed", "D. Amaze"],
      correct: "B",
      explanation: "‡πÉ‡∏ä‡πâ 'Amazingly' ‡πÄ‡∏õ‡πá‡∏ô adverb ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏ó‡∏∂‡πà‡∏á"
    }
  ];

  const getProgressColor = () => {
    const percentage = (currentScore / totalQuestions) * 100;
    if (percentage >= 80) return '#4CAF50';
    if (percentage >= 60) return '#FF9800';
    return '#F44336';
  };

  const VocabularyCard = ({ vocab }) => (
    <View style={styles.vocabCard}>
      <View style={styles.vocabHeader}>
        <Text style={styles.vocabWord}>{vocab.word}</Text>
        <TouchableOpacity 
          style={[styles.playButtonSmall, isPlaying && styles.disabledButton]}
          onPress={() => playSound(vocab.example)}
          disabled={isPlaying}
        >
          <Text style={styles.playButtonText}>üîä</Text>
        </TouchableOpacity>
      </View>
      <Text style={styles.vocabPronunciation}>{vocab.pronunciation}</Text>
      <Text style={styles.vocabMeaning}>{vocab.meaning}</Text>
      <View style={styles.exampleContainer}>
        <Text style={styles.vocabExample}>{vocab.example}</Text>
      </View>
    </View>
  );

  const AdverbCard = ({ adverb }) => (
    <View style={styles.adverbCard}>
      <View style={styles.adverbHeader}>
        <Text style={styles.adverbIcon}>{adverb.icon}</Text>
        <Text style={styles.adverbWord}>{adverb.word}</Text>
      </View>
      <Text style={styles.adverbMeaning}>{adverb.meaning}</Text>
      <Text style={styles.adverbExample}>{adverb.example}</Text>
      <TouchableOpacity 
        style={[styles.modernButton, styles.secondaryButton, isPlaying && styles.disabledButton]}
        onPress={() => playSound(adverb.example)}
        disabled={isPlaying}
      >
        <Text style={styles.modernButtonText}>
          {isPlaying ? '‚è≥' : '‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô'}
        </Text>
      </TouchableOpacity>
    </View>
  );

  return (
    <View style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="#1976D2" />
      <ScrollView showsVerticalScrollIndicator={false}>
        <LinearGradient
          colors={['#1976D2', '#42A5F5', '#64B5F6']}
          style={styles.header}
          start={{ x: 0, y: 0 }}
          end={{ x: 1, y: 1 }}
        >
          <View style={styles.headerContent}>
            <Text style={styles.headerTitle}>üèîÔ∏è Adventure & Exploration</Text>
            <Text style={styles.headerSubtitle}>Role Models & Past Perfect Tenses & Adverb Sentence </Text>
           
            {isPlaying && (
              <TouchableOpacity style={styles.stopButton} onPress={stopAudio}>
                <Text style={styles.stopButtonText}>‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á</Text>
              </TouchableOpacity>
            )}
          </View>
        </LinearGradient>

        {/* Grammar Rules Section */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>üìö ‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏ß‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå</Text>
            <View style={styles.sectionDivider} />
          </View>
          {grammarRules.map((rule, index) => (
            <View key={index} style={styles.grammarCard}>
              <View style={styles.grammarHeader}>
                <Text style={styles.grammarIcon}>{rule.icon}</Text>
                <Text style={styles.grammarTitle}>{rule.title}</Text>
              </View>
              <View style={styles.formulaContainer}>
                <Text style={styles.formulaLabel}>‡∏™‡∏π‡∏ï‡∏£:</Text>
                <Text style={styles.grammarFormula}>{rule.rule}</Text>
              </View>
              <View style={styles.explanationContainer}>
                <Text style={styles.grammarExplanation}>üí° {rule.explanation}</Text>
              </View>
              <View style={styles.examplesContainer}>
                <Text style={styles.examplesTitle}>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</Text>
                {rule.examples.map((example, idx) => (
                  <View key={idx} style={styles.exampleItem}>
                    <Text style={styles.exampleBullet}>‚Ä¢</Text>
                    <Text style={styles.grammarExample}>{example}</Text>
                  </View>
                ))}
              </View>
              <TouchableOpacity 
                style={[styles.modernButton, styles.primaryButton, isPlaying && styles.disabledButton]}
                onPress={() => playSound(rule.examples.join('. '))}
                disabled={isPlaying}
              >
                <Text style={styles.modernButtonText}>
                  {isPlaying ? '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô...' : 'üîä ‡∏ü‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á'}
                </Text>
              </TouchableOpacity>
            </View>
          ))}
        </View>

        {/* Vocabulary Section */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>üìù ‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢</Text>
            <View style={styles.sectionDivider} />
          </View>
          {adventureVocabulary.map((category, categoryIndex) => (
            <View key={categoryIndex} style={styles.categoryCard}>
              <View style={styles.categoryHeader}>
                <Text style={styles.categoryIcon}>{category.icon}</Text>
                <Text style={styles.categoryTitle}>{category.category}</Text>
              </View>
              <View style={styles.vocabContainer}>
                {chunkArray(category.items, 2).map((row, rowIdx) => (
                  <View key={rowIdx} style={{ flexDirection: 'row', marginBottom: 8 }}>
                    {row.map((vocab, idx) => (
                      <View style={{ flex: 1, marginRight: idx === 0 ? 8 : 0 }} key={vocab.word}>
                        <VocabularyCard vocab={vocab} />
                      </View>
                    ))}
                    {row.length < 2 && <View style={{ flex: 1 }} />}
                  </View>
                ))}
              </View>
            </View>
          ))}
        </View>

        {/* Adverb Starters Section */}
<View style={styles.section}>
  <View style={styles.sectionHeader}>
    <Text style={styles.sectionTitle}>‚ö° Adverb Sentence Starters</Text>
    <View style={styles.sectionDivider} />
  </View>
  {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ */}
  <Text style={styles.adverbDesc}>
    Adverb Sentence Starters ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏Å‡∏£‡∏¥‡∏¢‡∏≤‡∏ß‡∏¥‡πÄ‡∏®‡∏©‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏•‡∏µ‡∏Å‡∏£‡∏¥‡∏¢‡∏≤‡∏ß‡∏¥‡πÄ‡∏®‡∏©‡∏ì‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ 
    ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ô‡πâ‡∏ô‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏î‡∏π‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô 
    ‡πÄ‡∏ä‡πà‡∏ô Surprisingly, Unfortunately, Fortunately ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô
  </Text>
  <View style={styles.adverbList}>
    {chunkArray(adverbStarters, 2).map((row, rowIdx) => (
      <View key={rowIdx} style={{ flexDirection: 'row', marginBottom: 8 }}>
        {row.map((adverb, idx) => (
          <View style={{ flex: 1, marginRight: idx === 0 ? 8 : 0 }} key={adverb.word}>
            <AdverbCard adverb={adverb} />
          </View>
        ))}
        {row.length < 2 && <View style={{ flex: 1 }} />}
      </View>
    ))}
  </View>
</View>


        {/* Inspirational Stories Section */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>üåü ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à</Text>
            <View style={styles.sectionDivider} />
          </View>
          {inspirationalStories.map((story, idx) => (
            <View key={idx} style={styles.storyCard}>
              <View style={styles.storyHeader}>
                <Text style={styles.storyIcon}>{story.icon}</Text>
                <Text style={styles.storyTitle}>{story.title}</Text>
              </View>
              <Text style={styles.storyText}>{story.story}</Text>
              <Text style={styles.storyThai}>{story.thai}</Text>
              <TouchableOpacity
                style={[styles.modernButton, styles.secondaryButton, isPlaying && styles.disabledButton]}
                onPress={() => playSound(story.story)}
                disabled={isPlaying}
              >
                <Text style={styles.modernButtonText}>{isPlaying ? '‚è≥' : 'üîä ‡∏ü‡∏±‡∏á‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©'}</Text>
              </TouchableOpacity>
            </View>
          ))}
        </View>

        {/* Common Phrases Section */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>üí¨ ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢</Text>
            <View style={styles.sectionDivider} />
          </View>
          {commonPhrases.map((phrase, idx) => (
            <View key={idx} style={styles.phraseCard}>
              <View style={styles.phraseHeader}>
                <Text style={styles.phraseIcon}>{phrase.icon}</Text>
                <Text style={styles.phraseText}>{phrase.english}</Text>
              </View>
              <Text style={styles.phraseThai}>{phrase.thai}</Text>
              <Text style={styles.phraseUsage}>{phrase.usage}</Text>
              <TouchableOpacity
                style={[styles.modernButton, styles.secondaryButton, isPlaying && styles.disabledButton]}
                onPress={() => playSound(phrase.english)}
                disabled={isPlaying}
              >
                <Text style={styles.modernButtonText}>{isPlaying ? '‚è≥' : 'üîä ‡∏ü‡∏±‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ'}</Text>
              </TouchableOpacity>
            </View>
          ))}
        </View>
        

        {/* Quiz Section */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>üß† ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</Text>
            <View style={styles.sectionDivider} />
          </View>
          
          {quizQuestions.map((q, idx) => (
            <View key={q.id} style={styles.quizCard}>
              <Text style={styles.quizQuestion}>{idx + 1}. {q.question}</Text>
              {q.choices.map((choice, cidx) => (
                <TouchableOpacity
                  key={cidx}
                  style={[
                    styles.choiceButton,
                    answeredQuestions.has(q.id) &&
                    choice.charAt(0) === q.correct && styles.correctChoice,
                  ]}
                  onPress={() => handleQuizSubmit(q.id, choice.charAt(0), q.correct)}
                  disabled={answeredQuestions.has(q.id)}
                >
                  <Text style={styles.choiceText}>{choice}</Text>
                </TouchableOpacity>
              ))}
              {answeredQuestions.has(q.id) && (
                <Text style={styles.explanationText}>{q.explanation}</Text>
              )}
            </View>
          ))}
        </View>

        <View style={{ height: 40 }} />
        
      </ScrollView>
    </View>
  );
}

// ----------- STYLES -----------
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F4F8FB'
  },
  adverbDesc: {
    fontSize: 14,
    color: '#444',
    marginBottom: 12,
    backgroundColor: '#E3F2FD',
    borderRadius: 10,
    padding: 10
  },
  header: {
    paddingTop: 46,
    paddingBottom: 30,
    paddingHorizontal: 22,
    borderBottomLeftRadius: 26,
    borderBottomRightRadius: 26,
    marginBottom: 8
  },
  headerContent: {
    alignItems: 'center'
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFF',
    marginBottom: 6
  },
  headerSubtitle: {
    fontSize: 15,
    color: '#e3f2fd',
    marginBottom: 16
  },
  progressContainer: {
    width: '100%',
    marginVertical: 8,
    alignItems: 'center'
  },
  progressBar: {
    width: '90%',
    height: 12,
    backgroundColor: '#E3E3E3',
    borderRadius: 12,
    overflow: 'hidden',
    marginBottom: 4
  },
  progressFill: {
    height: 12,
    borderRadius: 12
  },
  scoreText: {
    color: '#FFF',
    fontSize: 16,
    fontWeight: 'bold'
  },
  stopButton: {
    marginTop: 12,
    backgroundColor: '#fff',
    borderRadius: 18,
    paddingVertical: 6,
    paddingHorizontal: 16,
    alignSelf: 'center'
  },
  stopButtonText: {
    color: '#1976D2',
    fontWeight: 'bold',
    fontSize: 15
  },
  section: {
    marginTop: 20,
    marginHorizontal: 18,
    marginBottom: 10,
    backgroundColor: '#FFF',
    borderRadius: 18,
    padding: 16,
    elevation: 2,
    shadowColor: '#000',
    shadowOpacity: 0.05,
    shadowRadius: 8,
    shadowOffset: { width: 0, height: 4 }
  },
  sectionHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 6
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1976D2',
    marginRight: 10
  },
  sectionDivider: {
    flex: 1,
    height: 2,
    backgroundColor: '#B3E5FC',
    borderRadius: 1
  },
  grammarCard: {
    marginBottom: 18,
    padding: 10,
    backgroundColor: '#E3F2FD',
    borderRadius: 14
  },
  grammarHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5
  },
  grammarIcon: {
    fontSize: 22,
    marginRight: 7
  },
  grammarTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1565C0'
  },
  formulaContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginVertical: 4
  },
  formulaLabel: {
    fontSize: 14,
    color: '#333',
    marginRight: 4
  },
  grammarFormula: {
    fontSize: 14,
    color: '#0D47A1',
    fontWeight: '600'
  },
  explanationContainer: {
    marginVertical: 2
  },
  grammarExplanation: {
    fontSize: 14,
    color: '#444'
  },
  examplesContainer: {
    marginTop: 6,
    marginBottom: 2
  },
  examplesTitle: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 14
  },
  exampleItem: {
    flexDirection: 'row',
    alignItems: 'flex-start'
  },
  exampleBullet: {
    fontSize: 16,
    marginRight: 4
  },
  grammarExample: {
    fontSize: 13,
    color: '#333',
    marginBottom: 2
  },
  modernButton: {
    marginTop: 10,
    borderRadius: 16,
    paddingVertical: 8,
    paddingHorizontal: 16,
    alignSelf: 'flex-start'
  },
  primaryButton: {
    backgroundColor: '#1976D2'
  },
  secondaryButton: {
    backgroundColor: '#B3E5FC'
  },
  modernButtonText: {
    color: '#FFF',
    fontWeight: 'bold',
    fontSize: 15
  },
  disabledButton: {
    opacity: 0.5
  },
  vocabContainer: {
    flexDirection: 'column',
    flexWrap: 'wrap'
  },
  vocabCard: {
    backgroundColor: '#FFF',
    borderRadius: 14,
    padding: 10,
    marginBottom: 0,
    borderWidth: 1,
    borderColor: '#E3F2FD'
  },
  vocabHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  vocabWord: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 15
  },
  playButtonSmall: {
    padding: 3,
    borderRadius: 14,
    backgroundColor: '#E3F2FD'
  },
  playButtonText: {
    fontSize: 16
  },
  vocabPronunciation: {
    fontSize: 13,
    color: '#888'
  },
  vocabMeaning: {
    fontSize: 13,
    color: '#333'
  },
  exampleContainer: {
    marginTop: 4
  },
  vocabExample: {
    fontSize: 13,
    fontStyle: 'italic',
    color: '#1565C0'
  },
  categoryCard: {
    marginBottom: 10
  },
  categoryHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 2
  },
  categoryIcon: {
    fontSize: 18,
    marginRight: 6
  },
  categoryTitle: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 15
  },
  adverbList: {
    flexDirection: 'column',
    flexWrap: 'wrap'
  },
  adverbCard: {
    backgroundColor: '#FFF',
    borderRadius: 14,
    padding: 10,
    borderWidth: 1,
    borderColor: '#E3F2FD'
  },
  adverbHeader: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  adverbIcon: {
    fontSize: 20,
    marginRight: 5
  },
  adverbWord: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 15
  },
  adverbMeaning: {
    fontSize: 13,
    color: '#333'
  },
  adverbExample: {
    fontSize: 13,
    fontStyle: 'italic',
    color: '#1565C0'
  },
  storyCard: {
    backgroundColor: '#E3F2FD',
    borderRadius: 14,
    marginBottom: 12,
    padding: 10
  },
  storyHeader: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  storyIcon: {
    fontSize: 18,
    marginRight: 7
  },
  storyTitle: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 15
  },
  storyText: {
    marginTop: 2,
    color: '#333'
  },
  storyThai: {
    marginTop: 2,
    color: '#388E3C',
    fontStyle: 'italic'
  },
  phraseCard: {
    backgroundColor: '#fff',
    borderRadius: 14,
    marginBottom: 12,
    padding: 10,
    borderWidth: 1,
    borderColor: '#E3F2FD'
  },
  phraseHeader: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  phraseIcon: {
    fontSize: 18,
    marginRight: 6
  },
  phraseText: {
    fontWeight: 'bold',
    color: '#1976D2',
    fontSize: 15
  },
  phraseThai: {
    color: '#333',
    marginTop: 2
  },
  phraseUsage: {
    color: '#607D8B',
    fontSize: 13,
    marginTop: 1
  },
  quizCard: {
    backgroundColor: '#E3F2FD',
    borderRadius: 14,
    marginBottom: 15,
    padding: 10
  },
  quizQuestion: {
    fontWeight: 'bold',
    color: '#0D47A1',
    fontSize: 15,
    marginBottom: 6
  },
  choiceButton: {
    paddingVertical: 6,
    paddingHorizontal: 12,
    marginVertical: 2,
    backgroundColor: '#fff',
    borderRadius: 10,
    borderWidth: 1,
    borderColor: '#B3E5FC'
  },
  correctChoice: {
    backgroundColor: '#C8E6C9',
    borderColor: '#43A047'
  },
  choiceText: {
    color: '#1565C0',
    fontSize: 15
  },
  explanationText: {
    color: '#1976D2',
    marginTop: 4,
    fontSize: 13,
    fontStyle: 'italic'
  }
});
